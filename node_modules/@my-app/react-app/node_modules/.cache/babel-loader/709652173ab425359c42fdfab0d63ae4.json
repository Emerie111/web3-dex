{"ast":null,"code":"import _slicedToArray from \"C:/Users/HP 250 G1/web3-dex/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect, useReducer } from 'react';\nimport { BlockNumberContext } from './context';\nimport { blockNumberReducer } from '../common/reducer';\nimport { useDebounce, useEthers } from '../../../hooks';\nimport { subscribeToNewBlock } from '../common/subscribeToNewBlock';\nimport { useWindow } from '../../window';\n/**\n * @internal Intended for internal use - use it on your own risk\n */\n\nexport function BlockNumberProvider(_ref) {\n  var children = _ref.children;\n\n  var _useEthers = useEthers(),\n      library = _useEthers.library,\n      chainId = _useEthers.chainId;\n\n  var _useReducer = useReducer(blockNumberReducer, {}),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var _useWindow = useWindow(),\n      isActive = _useWindow.isActive;\n\n  useEffect(function () {\n    return subscribeToNewBlock(library, chainId, dispatch, isActive);\n  }, [library, chainId, isActive]);\n  var debouncedState = useDebounce(state, 100);\n  var blockNumber = chainId !== undefined ? debouncedState[chainId] : undefined;\n  return _jsx(BlockNumberContext.Provider, {\n    value: blockNumber,\n    children: children\n  });\n}","map":{"version":3,"sources":["../../../../../../src/providers/blockNumber/blockNumber/provider.tsx"],"names":[],"mappings":";;AAAA,SAAoB,SAApB,EAA+B,UAA/B,QAAiD,OAAjD;AACA,SAAS,kBAAT,QAAmC,WAAnC;AACA,SAAS,kBAAT,QAAmC,mBAAnC;AACA,SAAS,WAAT,EAAsB,SAAtB,QAAuC,gBAAvC;AACA,SAAS,mBAAT,QAAoC,+BAApC;AACA,SAAS,SAAT,QAA0B,cAA1B;AAMA;;AAEG;;AACH,OAAM,SAAU,mBAAV,OAAiD;EAAA,IAAjB,QAAiB,QAAjB,QAAiB;;EACrD,iBAA6B,SAAS,EAAtC;EAAA,IAAQ,OAAR,cAAQ,OAAR;EAAA,IAAiB,OAAjB,cAAiB,OAAjB;;EACA,kBAA0B,UAAU,CAAC,kBAAD,EAAqB,EAArB,CAApC;EAAA;EAAA,IAAO,KAAP;EAAA,IAAc,QAAd;;EACA,iBAAqB,SAAS,EAA9B;EAAA,IAAQ,QAAR,cAAQ,QAAR;;EAEA,SAAS,CAAC;IAAA,OAAM,mBAAmB,CAAC,OAAD,EAAU,OAAV,EAAmB,QAAnB,EAA6B,QAA7B,CAAzB;EAAA,CAAD,EAAkE,CAAC,OAAD,EAAU,OAAV,EAAmB,QAAnB,CAAlE,CAAT;EAEA,IAAM,cAAc,GAAG,WAAW,CAAC,KAAD,EAAQ,GAAR,CAAlC;EACA,IAAM,WAAW,GAAG,OAAO,KAAK,SAAZ,GAAwB,cAAc,CAAC,OAAD,CAAtC,GAAkD,SAAtE;EAEA,OAAO,IAAA,CAAC,kBAAkB,CAAC,QAApB,EAA4B;IAAC,KAAK,EAAE,WAAR;IAAqB,QAAQ,EAAE;EAA/B,CAA5B,CAAP;AACD","sourceRoot":"","sourcesContent":["import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect, useReducer } from 'react';\nimport { BlockNumberContext } from './context';\nimport { blockNumberReducer } from '../common/reducer';\nimport { useDebounce, useEthers } from '../../../hooks';\nimport { subscribeToNewBlock } from '../common/subscribeToNewBlock';\nimport { useWindow } from '../../window';\n/**\n * @internal Intended for internal use - use it on your own risk\n */\nexport function BlockNumberProvider({ children }) {\n    const { library, chainId } = useEthers();\n    const [state, dispatch] = useReducer(blockNumberReducer, {});\n    const { isActive } = useWindow();\n    useEffect(() => subscribeToNewBlock(library, chainId, dispatch, isActive), [library, chainId, isActive]);\n    const debouncedState = useDebounce(state, 100);\n    const blockNumber = chainId !== undefined ? debouncedState[chainId] : undefined;\n    return _jsx(BlockNumberContext.Provider, { value: blockNumber, children: children });\n}\n//# sourceMappingURL=provider.js.map"]},"metadata":{},"sourceType":"module"}