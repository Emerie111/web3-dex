{"ast":null,"code":"import _slicedToArray from \"C:/Users/HP 250 G1/web3-dex/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect, useReducer } from 'react';\nimport { useDebounce } from '../../../hooks';\nimport { useReadonlyNetworks } from '../../network';\nimport { BlockNumbersContext } from './context';\nimport { blockNumberReducer } from '../common/reducer';\nimport { subscribeToNewBlock } from '../common/subscribeToNewBlock';\nimport { useWindow } from '../../window';\nexport function BlockNumbersProvider(_ref) {\n  var children = _ref.children;\n  var networks = useReadonlyNetworks();\n\n  var _useReducer = useReducer(blockNumberReducer, {}),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var _useWindow = useWindow(),\n      isActive = _useWindow.isActive;\n\n  useEffect(function () {\n    var onUnmount = Object.entries(networks).map(function (_ref2) {\n      var _ref3 = _slicedToArray(_ref2, 2),\n          chainId = _ref3[0],\n          provider = _ref3[1];\n\n      return subscribeToNewBlock(provider, Number(chainId), dispatch, isActive);\n    });\n    return function () {\n      onUnmount.forEach(function (fn) {\n        return fn();\n      });\n    };\n  }, [networks]);\n  var debouncedState = useDebounce(state, 100);\n  return _jsx(BlockNumbersContext.Provider, {\n    value: debouncedState,\n    children: children\n  });\n}","map":{"version":3,"sources":["../../../../../../src/providers/blockNumber/blockNumbers/provider.tsx"],"names":[],"mappings":";;AAAA,SAAoB,SAApB,EAA+B,UAA/B,QAAiD,OAAjD;AACA,SAAS,WAAT,QAA4B,gBAA5B;AACA,SAAS,mBAAT,QAAoC,eAApC;AACA,SAAS,mBAAT,QAAoC,WAApC;AACA,SAAS,kBAAT,QAAmC,mBAAnC;AACA,SAAS,mBAAT,QAAoC,+BAApC;AACA,SAAS,SAAT,QAA0B,cAA1B;AAMA,OAAM,SAAU,oBAAV,OAAkD;EAAA,IAAjB,QAAiB,QAAjB,QAAiB;EACtD,IAAM,QAAQ,GAAG,mBAAmB,EAApC;;EACA,kBAA0B,UAAU,CAAC,kBAAD,EAAqB,EAArB,CAApC;EAAA;EAAA,IAAO,KAAP;EAAA,IAAc,QAAd;;EACA,iBAAqB,SAAS,EAA9B;EAAA,IAAQ,QAAR,cAAQ,QAAR;;EAEA,SAAS,CAAC,YAAK;IACb,IAAM,SAAS,GAAG,MAAM,CAAC,OAAP,CAAe,QAAf,EAAyB,GAAzB,CAA6B;MAAA;MAAA,IAAE,OAAF;MAAA,IAAW,QAAX;;MAAA,OAC7C,mBAAmB,CAAC,QAAD,EAAW,MAAM,CAAC,OAAD,CAAjB,EAA4B,QAA5B,EAAsC,QAAtC,CAD0B;IAAA,CAA7B,CAAlB;IAIA,OAAO,YAAK;MACV,SAAS,CAAC,OAAV,CAAkB,UAAC,EAAD;QAAA,OAAQ,EAAE,EAAV;MAAA,CAAlB;IACD,CAFD;EAGD,CARQ,EAQN,CAAC,QAAD,CARM,CAAT;EAUA,IAAM,cAAc,GAAG,WAAW,CAAC,KAAD,EAAQ,GAAR,CAAlC;EAEA,OAAO,IAAA,CAAC,mBAAmB,CAAC,QAArB,EAA6B;IAAC,KAAK,EAAE,cAAR;IAAwB,QAAQ,EAAE;EAAlC,CAA7B,CAAP;AACD","sourceRoot":"","sourcesContent":["import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect, useReducer } from 'react';\nimport { useDebounce } from '../../../hooks';\nimport { useReadonlyNetworks } from '../../network';\nimport { BlockNumbersContext } from './context';\nimport { blockNumberReducer } from '../common/reducer';\nimport { subscribeToNewBlock } from '../common/subscribeToNewBlock';\nimport { useWindow } from '../../window';\nexport function BlockNumbersProvider({ children }) {\n    const networks = useReadonlyNetworks();\n    const [state, dispatch] = useReducer(blockNumberReducer, {});\n    const { isActive } = useWindow();\n    useEffect(() => {\n        const onUnmount = Object.entries(networks).map(([chainId, provider]) => subscribeToNewBlock(provider, Number(chainId), dispatch, isActive));\n        return () => {\n            onUnmount.forEach((fn) => fn());\n        };\n    }, [networks]);\n    const debouncedState = useDebounce(state, 100);\n    return _jsx(BlockNumbersContext.Provider, { value: debouncedState, children: children });\n}\n//# sourceMappingURL=provider.js.map"]},"metadata":{},"sourceType":"module"}