{"ast":null,"code":"import _classCallCheck from \"C:/Users/HP 250 G1/web3-dex/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/HP 250 G1/web3-dex/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { BigNumber } from 'ethers';\n/**\n * @public\n */\n\nexport var CurrencyValue = /*#__PURE__*/function () {\n  function CurrencyValue(currency, value) {\n    _classCallCheck(this, CurrencyValue);\n\n    this.currency = currency;\n    this.value = value;\n  }\n\n  _createClass(CurrencyValue, [{\n    key: \"toString\",\n    value: function toString() {\n      return this.value.toString();\n    }\n  }, {\n    key: \"format\",\n    value: function format() {\n      var overrideOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return this.currency.format(this.value.toString(), overrideOptions);\n    }\n  }, {\n    key: \"checkCurrency\",\n    value: function checkCurrency(other) {\n      if (this.currency !== other.currency) {\n        throw new TypeError(\"Currency mismatch \".concat(this.currency.ticker, \" != \").concat(other.currency.ticker));\n      }\n    }\n  }, {\n    key: \"map\",\n    value: function map(fn) {\n      return new CurrencyValue(this.currency, fn(this.value));\n    }\n  }, {\n    key: \"add\",\n    value: function add(other) {\n      this.checkCurrency(other);\n      return this.map(function (x) {\n        return x.add(other.value);\n      });\n    }\n  }, {\n    key: \"sub\",\n    value: function sub(other) {\n      this.checkCurrency(other);\n      return this.map(function (x) {\n        return x.sub(other.value);\n      });\n    }\n  }, {\n    key: \"mul\",\n    value: function mul(value) {\n      return this.map(function (x) {\n        return x.mul(value);\n      });\n    }\n  }, {\n    key: \"div\",\n    value: function div(value) {\n      return this.map(function (x) {\n        return x.div(value);\n      });\n    }\n  }, {\n    key: \"mod\",\n    value: function mod(value) {\n      return this.map(function (x) {\n        return x.mod(value);\n      });\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(other) {\n      return this.currency === other.currency && this.value.eq(other.value);\n    }\n  }, {\n    key: \"lt\",\n    value: function lt(other) {\n      this.checkCurrency(other);\n      return this.value.lt(other.value);\n    }\n  }, {\n    key: \"lte\",\n    value: function lte(other) {\n      this.checkCurrency(other);\n      return this.value.lte(other.value);\n    }\n  }, {\n    key: \"gt\",\n    value: function gt(other) {\n      this.checkCurrency(other);\n      return this.value.gt(other.value);\n    }\n  }, {\n    key: \"gte\",\n    value: function gte(other) {\n      this.checkCurrency(other);\n      return this.value.gte(other.value);\n    }\n  }, {\n    key: \"isZero\",\n    value: function isZero() {\n      return this.value.isZero();\n    }\n  }], [{\n    key: \"fromString\",\n    value: function fromString(currency, value) {\n      return new CurrencyValue(currency, BigNumber.from(value));\n    }\n  }, {\n    key: \"zero\",\n    value: function zero(currency) {\n      return new CurrencyValue(currency, BigNumber.from(0));\n    }\n  }]);\n\n  return CurrencyValue;\n}();","map":{"version":3,"sources":["../../../../src/model/CurrencyValue.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { BigNumber } from 'ethers';\n/**\n * @public\n */\nexport class CurrencyValue {\n    constructor(currency, value) {\n        this.currency = currency;\n        this.value = value;\n    }\n    static fromString(currency, value) {\n        return new CurrencyValue(currency, BigNumber.from(value));\n    }\n    static zero(currency) {\n        return new CurrencyValue(currency, BigNumber.from(0));\n    }\n    toString() {\n        return this.value.toString();\n    }\n    format(overrideOptions = {}) {\n        return this.currency.format(this.value.toString(), overrideOptions);\n    }\n    checkCurrency(other) {\n        if (this.currency !== other.currency) {\n            throw new TypeError(`Currency mismatch ${this.currency.ticker} != ${other.currency.ticker}`);\n        }\n    }\n    map(fn) {\n        return new CurrencyValue(this.currency, fn(this.value));\n    }\n    add(other) {\n        this.checkCurrency(other);\n        return this.map((x) => x.add(other.value));\n    }\n    sub(other) {\n        this.checkCurrency(other);\n        return this.map((x) => x.sub(other.value));\n    }\n    mul(value) {\n        return this.map((x) => x.mul(value));\n    }\n    div(value) {\n        return this.map((x) => x.div(value));\n    }\n    mod(value) {\n        return this.map((x) => x.mod(value));\n    }\n    equals(other) {\n        return this.currency === other.currency && this.value.eq(other.value);\n    }\n    lt(other) {\n        this.checkCurrency(other);\n        return this.value.lt(other.value);\n    }\n    lte(other) {\n        this.checkCurrency(other);\n        return this.value.lte(other.value);\n    }\n    gt(other) {\n        this.checkCurrency(other);\n        return this.value.gt(other.value);\n    }\n    gte(other) {\n        this.checkCurrency(other);\n        return this.value.gte(other.value);\n    }\n    isZero() {\n        return this.value.isZero();\n    }\n}\n//# sourceMappingURL=CurrencyValue.js.map"]},"metadata":{},"sourceType":"module"}