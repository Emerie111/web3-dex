{"ast":null,"code":"import * as chains from '../model/chain';\n/**\n * @internal Intended for internal use - use it on your own risk\n */\n\nexport function getChainMeta(chainId) {\n  var chain = Object.values(chains).find(function (chain) {\n    return chain.chainId === chainId;\n  });\n\n  if (!chain) {\n    throw new Error(\"Chain \".concat(chainId, \" does not exist\"));\n  }\n\n  return chain;\n}","map":{"version":3,"sources":["../../../../src/helpers/getChainMeta.ts"],"names":[],"mappings":"AACA,OAAO,KAAK,MAAZ,MAAwB,gBAAxB;AAEA;;AAEG;;AACH,OAAM,SAAU,YAAV,CAAuB,OAAvB,EAAuC;EAC3C,IAAM,KAAK,GAAG,MAAM,CAAC,MAAP,CAAc,MAAd,EAAsB,IAAtB,CAA2B,UAAC,KAAD;IAAA,OAAW,KAAK,CAAC,OAAN,KAAkB,OAA7B;EAAA,CAA3B,CAAd;;EACA,IAAI,CAAC,KAAL,EAAY;IACV,MAAM,IAAI,KAAJ,iBAAmB,OAAnB,qBAAN;EACD;;EACD,OAAO,KAAP;AACD","sourceRoot":"","sourcesContent":["import * as chains from '../model/chain';\n/**\n * @internal Intended for internal use - use it on your own risk\n */\nexport function getChainMeta(chainId) {\n    const chain = Object.values(chains).find((chain) => chain.chainId === chainId);\n    if (!chain) {\n        throw new Error(`Chain ${chainId} does not exist`);\n    }\n    return chain;\n}\n//# sourceMappingURL=getChainMeta.js.map"]},"metadata":{},"sourceType":"module"}