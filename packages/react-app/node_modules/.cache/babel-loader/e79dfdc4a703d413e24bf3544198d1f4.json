{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/HP 250 G1/web3-dex/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/HP 250 G1/web3-dex/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { ContractFactory } from 'ethers';\nexport function deployContract(_x, _x2) {\n  return _deployContract.apply(this, arguments);\n}\n\nfunction _deployContract() {\n  _deployContract = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(contractAbi, signer) {\n    var factory, contract;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            factory = new ContractFactory(contractAbi.abi, contractAbi.bytecode, signer);\n            _context.next = 3;\n            return factory.deploy();\n\n          case 3:\n            contract = _context.sent;\n            _context.next = 6;\n            return contract.deployTransaction.wait();\n\n          case 6:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _deployContract.apply(this, arguments);\n}","map":{"version":3,"sources":["../../../../src/helpers/contract.ts"],"names":[],"mappings":";;AAAA,SAAS,eAAT,QAAwC,QAAxC;AAOA,gBAAsB,cAAtB;EAAA;AAAA;;;+EAAO,iBACL,WADK,EAEL,MAFK;IAAA;IAAA;MAAA;QAAA;UAAA;YAIC,OAJD,GAIW,IAAI,eAAJ,CAAoB,WAAW,CAAC,GAAhC,EAAqC,WAAW,CAAC,QAAjD,EAA2D,MAA3D,CAJX;YAAA;YAAA,OAKkB,OAAO,CAAC,MAAR,EALlB;;UAAA;YAKC,QALD;YAAA;YAAA,OAMQ,QAAQ,CAAC,iBAAT,CAA2B,IAA3B,EANR;;UAAA;YAAA;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,C","sourceRoot":"","sourcesContent":["import { ContractFactory } from 'ethers';\nexport async function deployContract(contractAbi, signer) {\n    const factory = new ContractFactory(contractAbi.abi, contractAbi.bytecode, signer);\n    const contract = await factory.deploy();\n    return await contract.deployTransaction.wait();\n}\n//# sourceMappingURL=contract.js.map"]},"metadata":{},"sourceType":"module"}